<!DOCTYPE html>
<html>
	<head>
		<title>Mars Collapse</title>
		<style>
			body {
				font-family: 'Source Sans Pro', sans-serif;
				background-image: url('images/request-page-background.jpg');
				background-size: cover;
			}
			#main {
				background-color: rgba(255, 255, 255, 0.5);
				position: absolute;
				left: 5%;
				width: 86%;
				top: 10%;
				padding: 2%;
			}
			input[type=text] {
				outline: none;
				border-radius: 4px;
				border: 2px #32bcc1 solid;
				padding: 5px;
				background-color: rgba(255, 255, 255, 0.2);
			}
			button {
				cursor: pointer;
			}
		</style>
		<link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet">
	</head>
	<script src="/socket.io/socket.io.js"></script>
	<script src="http://code.jquery.com/jquery-1.11.1.js"></script>

	<body>

	<div id = 'main'> 
		
		<h2 id='name'></h2>
		Change Name: <input id='input' type="text">&emsp;<span id="feedback"></span>
		<br>
		<br>Search
		<input id="search" type="text">
		<br>Pending Requests
		<ul id = "requests">
		</ul>

		<br>Online Users
		<ul id='users'>
		
		</ul>
	 </div>

	</body>

	<script>

	var socket = io("/index");
	var globalName;

	socket.on('insert users', function (connectedMofos) {
		connectedMofos.forEach(function (mofo) {
			 var li = $('<li>', {id: mofo});
			 // li.attr('id', mofo);
			 li.text(mofo);
			 var button = generateButton(mofo);
			 li.append(button);
			 $('#users').append(li);
		});
	});

	socket.on('update user', function (mofo) {
		var li = $("#" + mofo.stale);
		li.text(mofo.fresh);
		li.attr('id', mofo.fresh);
		li.append(generateButton(mofo.fresh));
	});

	socket.on('delete user', function (mofo) {
		$("#" + mofo).remove();
	});

	socket.on('uuid', function(name){
		globalName = name;
		$("#name").text(name);
		$("#input").val(name);
	});

	socket.on('status', function(status){
		if (status == "failure") {
			$("#feedback").text("Sorry, that name is already taken.");
			return;
		}
		var name = $("#input").val();
		globalName = name;
		$("#name").text(name);
		$("#feedback").text("Changed!");
	});

	socket.on("war request", function (request) {
		var li = $("#" + request.name);
		$("#requests").append(li);
		var button = li.children(":first");
		button.text("Accept");
		button.off();
		button.click(function () {
			socket.emit('acceptance', request);
		});
	});

	socket.on("cancel request", function (canceller) {
		// move #requests -> #users
		var li = $("#" + canceller.name);
		$("#users").append(li);
		var button = li.children(":first");
		switchToSend(button, canceller.name);
	});

	socket.on('start game', function (token) {
		localStorage.entryToken = token;
		location.href = "/game";
	});

	function generateButton(mofo) {
		var button = $('<button>');
		switchToSend(button, mofo);
		return button;
	}

	function switchToCancel(button, user) {
		button.text('Cancel Request');
		button.off();
		button.click(function () {
			socket.emit('cancel request', {name: user});
			switchToSend(button, user);
		});
	}

	function switchToSend(button, user) {
		button.text("Send Request");
		button.off();
		button.click(function () {
			socket.emit('war request', {name: user});
			switchToCancel(button, user);
		});
	}

	$("#input").change(function () {
		var input = $("#input").val();
		if (input == globalName) {
			$("#feedback").text("");
			return;
		}
		if (input === "") {
			$("#feedback").text("It needs to be at least one character.");
			return;
		}
		if (input.includes(" ")) {
			$("#feedback").text("No spaces, please.");
			return;
		}
		socket.emit('name change', input);
	});

	$("#search").change(function () {
		var query = $("#search").val();
		$("li").each(function (index, row) {
			var isMatch = row.id.includes(query);
			$(row).toggle(isMatch);
		});
	});
	</script>
</html>